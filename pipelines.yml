resources:
  - name: gitRepoResource42
    type: GitRepo
    configuration:
 #     interval: "0 0 * * *"
      gitProvider: aidan_github
      path: a-murphy/5testRename5
      branches:
        include: nointegrations
      buildOn:
        pullRequestClose: true
        pullRequestCreate: true
        releaseCreate: true
        tagCreate: true

  - name: gitRepoResource
    type: GitRepo
    configuration:
      gitProvider: aidan_github
      path: a-murphy/5testRename5
      buildOn:
         pullRequestClose: false
         releaseCreate: true
         tagCreate: true
      tags:
        include: include.*
  - name: helloHelm
    type: GitRepo
    configuration:
      gitProvider: aidan_github
      path: a-murphy/hello-helm
      branch: master
  - name: examples_repo
    type: GitRepo
    configuration:
      path: a-murphy/project-examples
      gitProvider: aidan_github
      branches:
        include: master
  - name: goRepo
    type: GitRepo
    configuration:
      gitProvider: aidan_github
      path: a-murphy/go_app

  - name: goRepoModule
    type: GitRepo
    configuration:
      gitProvider: aidan_github
      path: a-murphy/artifactory-go-example-1
         
  - name: releaseBundle
    type: ReleaseBundle
    configuration:
      sourceDistribution:   aidan_distribution
      name: release
      version: '1'
      isSigned: false
  - name: releaseBundle2
    type: ReleaseBundle
    configuration:
      sourceDistribution:   aidan_distribution
      name: release
      version: '1'
      isSigned: false
  - name: fileSpecFile
    type: FileSpec
    configuration:
      sourceArtifactory: aidan_artifactory
      pattern: "test/test.txt"
      recursive: true
  #    buildName: name
  #    buildNumber: 10
   #   flat: ${testBoolean}
   #   limit: ${testNumber}
   #   offset: ${testNumber}
  - name: gitRepoResource2
    type: GitRepo
    configuration:
      gitProvider: aidan_github
      path: a-murphy/5testRename5
      branches:
        include: master$
      buildOn:
         commit: false
         pullRequestCreate: false
         pullRequestClose: false
         releaseCreate: false
         tagCreate: false
  - name: helmChart
    type: HelmChart
    configuration:
      sourceArtifactory: aidan_artifactory
      repository: example-repo-local
      chart: my chart
      version: v1.1.1
  - name: nodeRepoResource4
    type: GitRepo
    configuration:
      gitProvider: aidan_github
      path: a-murphy/sample_node
      buildOn:
         commit: true
         pullRequestCreate: true
         pullRequestClose: false
         releaseCreate: true
         tagCreate: true
      branches:
        include: master
  - name: nodeRepoResource3
    type: GitRepo
    configuration:
      gitProvider: aidan_github
      path: a-murphy/vue-frontend
      buildOn:
         commit: false
  - name: outputBuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: aidan_artifactory
      buildName: test
      buildNumber: 1
  - name: outputBuildInfo2
    type: BuildInfo
    configuration:
      sourceArtifactory: aidan_artifactory
      buildName: test
      buildNumber: 1
  - name: outputBuildInfo3
    type: BuildInfo
    configuration:
      sourceArtifactory: aidan_artifactory
      buildName: test
      buildNumber: 1

pipelines:
 # - name: MavenStuff
 #   steps:
 #   - name: BuildSample
 #     type: MvnBuild
 #     configuration:
 #       environmentVariables:
 #         JFROG_CLI_BUILD_NAME: Maven
 #         JFROG_CLI_BUILD_NUMBER: $run_number
 #       sourceLocation: artifactory-maven-plugin-example
 #       configFileLocation: .
 #       configFileName: config
 #       mvnCommand: "install"
 #       inputResources:
 #         - name: examples_repo
 #       outputResources:
 #         - name: mavenBuildInfo2
 #       integrations:
 #         - name: artifactory
 #       autoPublishBuildInfo: true
 #     execution:
 #       onStart:
 #         - update-ca-certificates -f
  
  - name: test_pipeline_10
    configuration:
   #   nodePool: Ubuntu16
    #  dependencyMode:
    #    waitOnChildComplete: true
  #    retentionPolicy:
  #      minRuns: 5
  #      maxAgeDays: 10
      runtime:            
        type: image
        image:
          auto:
            language: node
            versions:
              - 10.18.0
    steps:
      - name: docker_build
        type: DockerBuild
        configuration:
 #         dockerFileLocation: .
 #         dockerFileName: Dockerfile
          dockerImageName: 192.168.50.42:8082/dockerrepo/image #${versionTag}
          dockerImageTag: tag #${versionTag}
      #    dockerOptions: "test${step_name} --test ${testNumber}"
          environmentVariables:
            versionTag: testTag
            testNumber: 5
            testBoolean: "true"
            JFROG_CLI_BUILD_NAME: dockerBuild
          inputResources:
            - name: fileSpecFile
            - name: gitRepoResource42
          #  - name: nodeRepoResource4
      - name: docker_push
        type: DockerPush
        configuration:
          targetRepository: dockerrepo
          forceXrayScan: ${testBoolean}
          autoPublishBuildInfo: true
          environmentVariables:
            versionTag: testTag
            testNumber: 5
            testBoolean: "false"
          inputSteps:
            - name: docker_build
          outputResources:
            - name: outputBuildInfo
          integrations:
            - name: aidan_artifactory
        execution:
          onStart:
            - jfrog rt c show aidan_artifactory
            
  - name: go_test
    steps:
      - name: Go
        type: GoBuild
        configuration:
          sourceLocation: "."
          repository: repo
          outputLocation: "output"
          outputFile: "file"
          inputResources:
            - name: gitRepoResource
        #    - name: fileSpec
          outputResources:
            - name: outputBuildInfo
          integrations:
            - name: aidan_artifactory
          runtime:
            type: image
            
      - name: gradle_step
        type: GradleBuild
        configuration:
          environmentVariables:
            JFROG_CLI_BUILD_NAME: GradleBuild
            JFROG_CLI_BUILD_NUMBER: 1
          sourceLocation: gradle-example-minimal
       #   sourceLocation: gradle-jcenter-resolve
          gradleCommand: artifactoryPublish clean -b build.gradle
          deployerRepo: gradle-local
          resolverRepo: jcenter
          usesPlugin: true
          useWrapper: true
          inputSteps:
            - name: Go
          inputResources:
            - name: examples_repo
          integrations:
            - name: aidan_artifactory

      - name: npmBuild
        type: NpmBuild
        configuration:
          sourceLocation: .
          repositoryName: remote-npm
          inputSteps:
            - name: Go
          inputResources:
            - name: nodeRepoResource4
            - name: fileSpecFile
          outputResources:
            - name: outputBuildInfo
     #     integrations:
     #       - name: artifactory

      - name: npmBuild2
        type: NpmBuild
        configuration:
          sourceLocation: .
          repositoryName: remote-npm
          inputSteps:
            - name: Go
          inputResources:
            - name: nodeRepoResource3
          integrations:
            - name: aidan_artifactory
      - name: npmPublish2
        type: NpmPublish
        configuration:
          repositoryName: test-npm
          forceXrayScan: true
          autoPublishBuildInfo: true
          integrations:
            - name: aidan_artifactory
          inputSteps:
            - name: npmBuild2
          outputResources:
            - name: outputBuildInfo

  - name: go_test3
    steps:
      - name: triggerCancel
        type: Bash
        configuration:
          affinityGroup: GoTest2
          inputResources:
            - name: gitRepoResource42
        execution:
          onExecute:
            - sleep 30
      - name: Go3
        type: GoBuild
        configuration:
          affinityGroup: GoTest2
          sourceLocation: "."
          repository: repo
          outputLocation: "output"
      #    noRegistry: true
          publishDeps: true
      #    outputFile: "file"
         # goCommand: "build -insecure -o ${outputLocation}/${outputFile}"
          inputSteps:
            - name: triggerCancel
          inputResources:
            - name: goRepo
            - name: fileSpecFile
          outputResources:
            - name: outputBuildInfo
          integrations:
            - name: aidan_artifactory
          runtime:
            type: image
        execution:
          onStart:
            - "pushd $(find_resource_variable $inputGitRepoResourceName resourcePath)"
            - "go get -insecure"
            - popd
     #       image:
     #         auto:
     #           language: go
     #           versions:
     #             - 1.11.11
      - name: npmBuild3
        type: NpmBuild
        configuration:
          affinityGroup: GoTest2
          sourceLocation: .
          repositoryName: test-npm
          inputSteps:
            - name: Go3
          inputResources:
            - name: nodeRepoResource4
       #     - name: fileSpec
          outputResources:
            - name: outputBuildInfo
          integrations:
            - name: aidan_artifactory
        execution:
          onStart:
            - sudo apt-get update
            
      - name: goPublishBinary
        type: GoPublishBinary
        configuration:
          affinityGroup: GoTest2
          forceXrayScan: true
          autoPublishBuildInfo: false
          targetRepository: go-test
          integrations:
            - name: aidan_artifactory
          outputResources:
            - name: outputBuildInfo
          inputSteps:
            - name: Go3
      - name: goPublishModule
        type: GoPublishModule
        configuration:
          affinityGroup: GoTest2
          forceXrayScan: false
          autoPublishBuildInfo: true
          targetRepository: test-go-test
          sourceLocation: .
          version: "v0.0.0"
          self: true
          deps: ALL
          outputResources:
            - name: outputBuildInfo
          inputResources:
            - name: goRepoModule
      - name: goPublishModuleNoOutput
        type: GoPublishModule
        configuration:
          forceXrayScan: true
          targetRepository: go-test
          sourceLocation: .
          version: "v0.0.0"
          self: true
          deps: ALL
          integrations:
            - name: aidan_artifactory
          inputResources:
            - name: goRepoModule
            - name: fileSpecFile
      - name: helmPublish
        type: HelmPublish
        configuration:
          affinityGroup: GoTest2
          chartPath: "./my chart"
          flags: --debug
          autoPublishBuildInfo: true
          inputResources:
            - name: gitRepoResource42
          outputResources:
            - name: helmChart
            - name: outputBuildInfo
            
      - name: createReleaseBundle
        type: CreateReleaseBundle
        configuration:
          releaseBundleName:        myReleaseBundle
          releaseBundleVersion:     "${run_number}"
          dryRun:                   false
          sign:                     false
          storeAtSourceArtifactory: "false"
          description:              "my description"
          releaseNotes:                         
            syntax:                markdown
            content:               "my release notes"
          inputResources:
            - name: outputBuildInfo
          inputSteps:
            - name: helmPublish
          outputResources:
            - name: releaseBundle
            - name: helmChart
      - name: signReleaseBundle
        type: SignReleaseBundle
        configuration:
          inputResources:
            - name: releaseBundle
            - name: helmChart
          outputResources:
            - name: releaseBundle2
   #         - name: fileSpecFile
      - name: publishBuildInfo
        type: PublishBuildInfo
        configuration:
          inputSteps:
            - name: goPublishBinary
          inputResources:
            - name: outputBuildInfo
            - name: gitRepoResource42
          outputResources:
            - name: outputBuildInfo2
      #      - name: fileSpecFile
      - name: xrayScan
        type: XrayScan
        configuration:
          inputResources:
            - name: outputBuildInfo2
            - name: gitRepoResource42
          outputResources:
            - name: outputBuildInfo3
        #    - name: fileSpecFile
 

  - name: aidan_test_helm
    steps:
      - name: HelmDeploy
        type: HelmDeploy
        configuration:
          helmVersion: 3
          flags: '--namespace pipe-master-pool'
          releaseName: test1
          chartPath: chart/hello
          dryRun: true
          lint: true
          lintFlags: '--help'
          test: true
          testFlags: '--parallel'
          integrations:
            - name: aidan_kubernetes
          inputResources:
            - name: helloHelm
          runtime:
            type: image
            image:
              auto:
                language: node
                versions:
                  - 12.18.2
