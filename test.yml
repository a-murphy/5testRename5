resources:
 # - name: propertyBag
 #   type: PropertyBag
 #   configuration:
 #     property1: one
 #     property2: 2
 #     property3: III
 #     'property5': 'test space one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen twenty'
 #     property6: ""
  - name: gitRepoResource32
    type: GitRepo
    configuration:
 #     interval: "0 0 * * *"
      gitProvider: aidan_github
      path: a-murphy/5testRename5
      buildOn:
        pullRequestClose: false
        releaseCreate: true
        tagCreate: true
      branches:
        include: {{gitBranch}}
        exclude: "{{ gitBranch }}"
      tags:
        include: "{{ gitBranch != 'windows2' ? 'testone' : 'testtwo' }}"
  - name: gitRepoResource33
    type: GitRepo
    configuration:
      gitProvider: aidan_github
      path: a-murphy/sample_node
  - name: gitRepoResource35
    type: GitRepo
    configuration:
      gitProvider: aidan_github
      path: a-murphy/5testRename5
      branches:
        include: {{gitBranch}}
  - name: buildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory:    artifactory
      buildName:  initial
      buildNumber: 1
  - name: fileSpec2
    type: FileSpec
    configuration:
      sourceArtifactory: artifactory
      aql: 'items.find({"name": {"$match": "test.*"}})'
#  - name: remoteFile
#    type: RemoteFile
#    configuration:
#      source: artifactory
        
 # - name: helmChart
 #   type: HelmChart
 #   configuration:
 #     sourceArtifactory: artifactory
 #     repository: example-repo-local/test/
 #     chart: my chart
 #     version: v1.1.1

  - name: outhook
    type: OutgoingWebhook
    configuration:
      webhookName: outgoing
pipelines:
  - name: webhook_pipeline
    steps:
      - name: sendHook
        type: Bash
        configuration:
          outputResources:
            - name: outhook
        execution:
          onExecute:
            - export imageName="testname"
            - export imageTag="testtag"
            - fail
          onStart:
            - echo "{\"imageName\":\"$imageName\",\"imageTag\":\"$imageTag\"}" > myFile.txt
            - >-
              set_payload outhook myFile.txt --file 
           #   "{\"imageName\":\"$imageName\",\"imageTag\":\"$imageTag\"}"
            - echo "$outhook_payload_file"
  - name: aidan_test_pipeline_windows
   # configuration:
   #   nodePool: win_2019
    steps:
      - name: in_trigger_step
        type: PowerShell
        configuration:    
   #       nodePool: windows
          affinityGroup: groupone
          runtime:            
            type: image
            image:
              auto:
                language: node
                versions:
                  - 10
          inputResources:
            - name: gitRepoResource33
    #        - name: fileSpec
        execution:
          onExecute:
            - echo "executing task command 1"
            - echo "executing task command 2"
            - pushd $res_gitRepoResource33_resourcePath
            - npm install
            - .\node_modules\.bin\mocha --recursive "tests/**/*.spec.js" -R mocha-junit-reporter --reporter-options mochaFile=testresults/testresults.xml
            - .\node_modules\.bin\istanbul --include-all-sources cover -root "routes" node_modules/mocha/bin/_mocha -- -R spec-xunit-file --recursive "tests/**/*.spec.js"
            - .\node_modules\.bin\istanbul report cobertura --dir codecoverage
            - save_tests testresults\*.xml

      - name: main_step
        type: PowerShell
        configuration:
    #      nodePool: windows
          environmentVariables:
            versionTag: testTag
            testNumber: 5
            testBoolean: "false"
     #     affinityGroup: groupone
          inputSteps:
            - name: in_trigger_step
        #  inputResources:
        #    - name: propertyBag
          runtime:
            type: image
            image:
              auto:
                language: node
                versions:
                  - 10.18.0
        execution:
          onStart:
            - echo "Prepping build environment"
          onExecute:
     #       - echo $res_propertyBag_property1
     #       - echo $res_propertyBag_property2
     #       - $property1
     #       - $property2
     #       - $property3
     #       - $env:property1
     #       - $env:property2
     #       - $env:property3
     #       - $global:property1
     #       - $script:property2
            - 'echo "step_node_name: $step_node_name"'
            - 'echo "step_node_id: $step_node_id"'
            - 'echo "step_node_pool_name: $step_node_pool_name"'
            
          onSuccess:
            - echo "Job well done!"
          onFailure:
            - echo "uh oh, something went wrong"
          onComplete: #always
            - echo "Cleaning up some stuff"
          onCancel:
            - echo "Someone cancelled the job"
            
     # - name: helmPublish
     #   type: HelmPublish
     #   configuration:
     #     chartPath: "my chart"
     #     flags: --debug
     #     inputResources:
     #       - name: gitRepoResource33
     #     outputResources:
     #       - name: helmChart
  - name: aidan_test_pipeline_bash
    steps:
      - name: bash_step
        type: Bash
        configuration:
          runtime:            
            type: image
          inputResources:
            - name: gitRepoResource32
      #      - name: propertyBag
        execution:
          onExecute:
            - echo "executing task command 1"
            - echo "executing task command 2"
        #    - echo $res_propertyBag_property1
        #    - echo $res_propertyBag_property2
        #    - echo $property1 $property2 $property3
        #    - echo $property4
            - echo "$res_gitRepoResource32_branches"
            - echo "$res_gitRepoResource32_branchName"
            - echo "$res_gitRepoResource32_branches_include"
          #  - pushd $res_gitRepoResource32_resourcePath
          #  - echo "hello frog" > test.xml
            - sleep 300
          #  - save_tests $res_gitRepoResource32_resourcePath/test.xml
      - name: bash_step2
        type: Bash
        configuration:
          affinityGroup: affinity_group2
          runtime:            
            type: image
          inputResources:
            - name: gitRepoResource32
          outputResources:
            - name: buildInfo
       #     - name: propertyBag
        execution:
          onExecute:
            - echo "executing task command 1"
            - echo "executing task command 2"
            - write_output buildInfo buildName="myName" buildNumber=100
     #       - pushd $res_gitRepoResource32_resourcePath
     #       - echo "hello frog" > test.xml
     #       - save_tests $res_gitRepoResource32_resourcePath/test.xml
     
     
      - name: bash_step_3
        type: Bash
        configuration:
          affinityGroup: affinity_group2
          inputSteps:
            - name: bash_step2
        execution:
          onExecute:
            - echo "executing task command 1"
      - name: bash_step_4
        type: Bash
        configuration:
          inputSteps:
            - name: bash_step_3
          affinityGroup: affinity_group2
          inputResources:
            - name: gitRepoResource32
        execution:
          onExecute:
            - echo "executing task command 1"
      - name: bash_step_5
        type: Bash
        configuration:
          affinityGroup: affinity_group2
          inputSteps:
            - name: bash_step_4
        execution:
          onExecute:
            - echo "executing task command 1"
      - name: bash_step_6
        type: Bash
        configuration:
          affinityGroup: affinity_group2
          inputSteps:
            - name: bash_step_5
        execution:
          onExecute:
            - echo "executing task command 1"
      - name: bash_step_7
        type: Bash
        configuration:
          inputSteps:
            - name: bash_step_6
          affinityGroup: affinity_group2
     #     inputResources:
     #       - name: remoteFile
        execution:
          onExecute:
            - echo "executing task command 1"
      - name: bash_step_8
        type: Bash
        configuration:
          affinityGroup: affinity_group2
          inputSteps:
            - name: bash_step_7
     #     integrations:
     #       - name: nointegration
        execution:
          onExecute:
            - echo "executing task command 1"
      - name: bash_step_22
        type: Bash
        configuration:
          affinityGroup: affinity_group2
          inputSteps:
            - name: bash_step_8
        execution:
          onExecute:
            - echo "executing task command 1"
      - name: bash_step_23
        type: Bash
        configuration:
          inputSteps:
            - name: bash_step_22
          affinityGroup: affinity_group2
          inputResources:
            - name: gitRepoResource32
        execution:
          onExecute:
            - echo "executing task command 1"
   #   - name: bash_step_11
   #     type: Bash
   #     configuration:
   #       affinityGroup: affinity_group2
   #       inputSteps:
   #         - name: bash_step_10
   #     execution:
   #       onExecute:
   #         - echo "executing task command 1"
     
#  - name: test_npm
#    steps:      
#      - name: npm_build
#        type: NpmBuild
#        configuration:
#          repositoryName: example-repo-local
#          sourceLocation: .
#          inputResources:
#            - name: gitRepoResource35
#          integrations:
#            - name: artifactory
#        execution:
#          onSuccess:
#            - send_notification Demo_slack

  - name: aidan_test_pipeline_bash2
    steps:
      - name: bash_step_pipeline2
        type: Bash
        configuration:
          priority: 10
          runtime:            
            type: image
          inputResources:
            - name: buildInfo
            - name: fileSpec2
            - name: gitRepoResource32
        execution:
          onExecute:
            - echo "$res_buildInfo_buildName"
            - echo "$res_buildInfo_buildNumber"

