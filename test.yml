resources:
  - name: stateOne
    type: state
  - name: gitRepoResource
    type: gitRepo
    repoPath: a-murphy/5testRename5
    configuration:
      integrationName: github
     # buildOn:
     #    commit: false
     #    pullRequest: true
     #    pullRequestClose: false
     #    release: true
     #    tagPush: true
    initialVersion:
      sha: master
      
  - name: bitbucketServerRepoResource
    type: gitRepo
    repoPath: ~aidan/test
    configuration:
      integrationName: bitbucketServer
      buildOn:
    #     commit: false
         pullRequest: true
         pullRequestClose: false
    #     release: true
         tagPush: true
    initialVersion:
      sha: master

  - name: gitRepoResource2
    type: gitRepo
    repoPath: a-murphy/5testRename5
    configuration:
      integrationName: github
      buildOn:
         commit: false
         pullRequest: false
         pullRequestClose: false
         release: false
         tagPush: false
      tags:
        only: tag1|tag2
      branches:
        only: master|test
    initialVersion:
      sha: master

#  - name: fileIntegrationResource
#    type: file
#    fileLocation: location
#    configuration:
#      files:
#        except:      file
#        only:        file       
#      integrationName: fileServerIntegration 
#    initialVersion:
#      fileName: file
#      fileDtTm: test6
#  - name: cluster
#    type: cluster
#    configuration:
#      integrationName: sshKey 
#    initialVersion:
#      targetIPs:
   #     - 1
#        - 1.2.3.5
#        - test2
#  - name: sample_java_file_test
#    type: file
#    fileLocation: text.js
#    configuration:
#      integrationName: fileServerIntegration
#    initialVersion:
#      fileName: test4
#  - name: file_test
#    type: file
#    fileLocation: text.js
#    configuration:
#      integrationName: fileServerIntegration
       
pipelines:
  - name: test_pipeline_1
    setup:
      environmentVariables:   
   #    readOnly:
    #      ENV1: value-pipe-1
    #      ENV2: value-pipe-2
      runtime:            
        type: host
    steps:
      - name: in_trigger_step
        type: bash
        configuration:
          affinityGroup: test_group 
        setup:
          runtime:            
            type: host
          #    options: test
        execution:
          onExecute:
            - bump_semver v1.2.3 minor
            - echo "executing task command 1"
            - echo "executing task command 2"
            - openssl genrsa -out key.pem 1024 
            - openssl rsa -in key.pem -text -noout 
            - openssl rsa -in key.pem -pubout -out pub.pem 
            - openssl rsa -in pub.pem -pubin -text -noout 
            - echo "testing encryption" > testfile.txt
            - encrypt_file --output testencrypted.txt testfile.txt --key pub.pem
            - cat testencrypted.txt
            - decrypt_file testencrypted.txt --output testunencrypted.txt --key key.pem
            - cat testunencrypted.txt
            - encrypt_string "encryptme" --key pub.pem
            - encryptedstring=$(encrypt_string "encryptme" --key pub.pem)
            - echo "$encryptedstring"
            - decrypt_string "$encryptedstring" --key key.pem
            - echo $testRunVariable
            - echo $testPipelineVariable
            - echo $testingAgain
            - add_run_variable testRunVariable="testing" testingAgain=2 testThree=three
            - add_pipeline_variable testPipelineVariable="testing" testingAgain=three
            - echo $testRunVariable
            - echo $testPipelineVariable
            - echo $testingAgain
            - restore_pipeline_state testing testfile2.txt
            - save_pipeline_state key.pem key2.pem
            - ls
            - save_pipeline_state testfile.txt testing
            - save_pipeline_state key.pem key.pem

      - name: main_step
        type: bash
        configuration:
          affinityGroup: test_group 
        setup:
        #  environmentVariables:
        #    normal:
        #      ENV1: value1
          #    ENV2: value2
          #  encrypted:
          #    SECURE_ENV1: test_value
          #    SECURE_ENV2: test_value
          runtime:            
            type: image
            image:
              custom: 
                name: drydock/u16node
                tag:  master
        requires:
          resources:
        #    - stateOne
            - gitRepoResource
            - bitbucketServerRepoResource
        triggeredBy:
          steps:
            - in_trigger_step
        execution:
          onStart:
            - echo $CURRENT_SCRIPT_SECTION
         #   - update_commit_status bitbucketServerRepoResource --message "$CURRENT_SCRIPT_SECTION" --context "$CURRENT_SCRIPT_SECTION"
            - echo "Prepping build environment"
         #   - update_commit_status gitRepoResource --status processing
          onExecute:
            - echo $CURRENT_SCRIPT_SECTION
         #   - update_commit_status bitbucketServerRepoResource --message "$CURRENT_SCRIPT_SECTION" --context "$CURRENT_SCRIPT_SECTION"
            - echo "executing task command 1"
            - echo "executing task command 2"
            - ls -R $STEP_WORKSPACE_DIR/download
            - restore_cache test lastrun.txt
            - ls
            - echo "testing1234" > testing.txt
            - cache_files testing.txt test
            - restore_pipeline_state testing testfile.txt
            - restore_pipeline_state key.pem key.pem
            - ls
        #    - update_commit_status bitbucketServerRepoResource --status processing --message "my message"
        #    - update_commit_status bitbucketServerRepoResource --status failure --context "failing-context"
        #    - update_commit_status bitbucketServerRepoResource --status success --message "my message" --context "succcess-context"
          #  - update_commit_status gitRepoResource --status testing
        #    - update_commit_status gitRepoResource2
        #    - compare_git --resource gitRepoResource
        #    - compare_git --commit-range d4c493389cd54b2ad795f94e91d445fece8cba2f..master --path $STEP_DEPENDENCY_STATE_DIR/resources/gitRepoResource
        #    - write_output gitRepoResource2 key1=value1 key2="value2" key3="value 3" "key4=value4" key5= key6="" key7=value7=7 key8

            - add_run_variable testRunVariable="testing" testingAgain=2 testThree=three
          #  - switch_env c --jdk openjdk11 4
          onSuccess:
            - echo "Job well done!"
            - echo $CURRENT_SCRIPT_SECTION
         #   - compare_git --resource gitRepoResource
        #    - update_commit_status bitbucketServerRepoResource --message "$CURRENT_SCRIPT_SECTION" --context "$CURRENT_SCRIPT_SECTION"
          onFailure:
            - echo $CURRENT_SCRIPT_SECTION
       #     - update_commit_status bitbucketServerRepoResource --message "$CURRENT_SCRIPT_SECTION" --context "$CURRENT_SCRIPT_SECTION"
            - echo "uh oh, something went wrong"
       #     - update_commit_status bitbucketServerRepoResource --status failure
          onComplete: #always
            - echo $CURRENT_SCRIPT_SECTION
        #    - update_commit_status bitbucketServerRepoResource --message "$CURRENT_SCRIPT_SECTION" --context "$CURRENT_SCRIPT_SECTION"
            - echo "Cleaning up some stuff"
          onCancel:
            - echo $CURRENT_SCRIPT_SECTION
       #     - update_commit_status bitbucketServerRepoResource --message "$CURRENT_SCRIPT_SECTION" --context "$CURRENT_SCRIPT_SECTION"
            - echo "Someone cancelled the job"
        outputResources:
          - gitRepoResource2
        #  - stateOne
      - name: other_step
        type: bash
        configuration:
          affinityGroup: test_group 
        setup:
          runtime:            
            type: host
        requires:
      #    resources:
      #      - stateOne
      #      - sample_java_file_test
          integrations:
            - github
            - slack
        triggeredBy:
      #    resources:
      #      - sample_java_file_test
          steps:
            - main_step
        execution:
         # onStart:
          #  - send_notification slack
      #      - echo "Prepping build environment"
      #      - echo "$testRunVariable"
      #      - echo "$testingAgain"
      #      - echo "$testThree"
          onExecute:
          #  - send_notification slack
            - echo "executing task command 1"
            - echo "executing task command 2"
            - echo "$testRunVariable"
            - echo "$testingAgain"
            - echo "$testThree"
            - add_run_variable testRunVariable="testingAgain"
            - yes "testing 1234 " | head -c 100000 > test.txt
            - echo "testing 1234 " > test2.txt
            - openssl genrsa -out key.pem 2048
            - openssl rsa -in key.pem -text -noout
            - openssl rsa -in key.pem -pubout -out pub.pem 
            - openssl rsa -in pub.pem -pubin -text -noout 
            - encrypt_file --output encrypted.txt test.txt --key pub.pem
            - cat encrypted.txt
            - decrypt_file encrypted.txt --output decrypted.txt --key key.pem
            - cat decrypted.txt
            - string=$(encrypt_string "testing 123" --key pub.pem)
            - echo $string
            - decrypt_string --key key.pem "$string"
            - encrypt_file --output encrypted2.txt test2.txt --key pub.pem
            - cat encrypted2.txt
            - decrypt_file encrypted2.txt --output decrypted2.txt --key key.pem
            - cat decrypted2.txt
          onSuccess:
         #   - send_notification slack
            - echo "Job well done!"
          onFailure:
         #   - send_notification slack
            - echo "uh oh, something went wrong"
          onComplete: #always
         #   - send_notification slack
            - echo "Cleaning up some stuff"
          onCancel:
            - echo "Someone cancelled the job"
