resources:
  - name: fileSpec
    type: FileSpec
    configuration:
      sourceArtifactory: artifactory
      pattern: "$test-${versionTag}-*"
      recursive: true
      buildName: myBuildName
      buildNumber: 100
      flat: ${testBoolean}
      limit: ${testNumber}
  - name: gitRepoResource32
    type: GitRepo
    configuration:
 #     interval: "0 0 * * *"
      gitProvider: aidan_github
      path: a-murphy/5testRename5
      buildOn:
        pullRequestClose: false
        releaseCreate: true
        tagCreate: true
      branches:
        include: {{gitBranch}}
        
  - name: helmChart
    type: HelmChart
    configuration:
      sourceArtifactory: artifactory
      repository: example-repo-local/test/
      chart: my chart
      version: v1.1.1
pipelines:
  - name: test_pipeline_windows
  #  configuration:
  #    nodePool: windows
    steps:
      - name: in_trigger_step
        type: PowerShell
        configuration:    
   #       nodePool: windows
          affinityGroup: groupone
          runtime:            
            type: image
          inputResources:
            - name: gitRepoResource32
    #        - name: fileSpec
        execution:
          onExecute:
            - echo "executing task command 1"
            - echo "executing task command 2"
            - echo "hello frog" > test.xml
            - save_tests $res_repo_pipe_resourcePath/test.xml

      - name: main_step
        type: PowerShell
        configuration:
    #      nodePool: windows
          environmentVariables:
            versionTag: testTag
            testNumber: 5
            testBoolean: "false"
     #     affinityGroup: groupone
          inputSteps:
            - name: in_trigger_step
          runtime:
            type: image
            image:
              auto:
                language: node
                versions:
                  - 10
        execution:
          onStart:
            - echo "Prepping build environment"
          onExecute:
            - 'echo "step_node_name: $step_node_name"'
            - 'echo "step_node_id: $step_node_id"'
            - 'echo "step_node_pool_name: $step_node_pool_name"'
            
          onSuccess:
            - echo "Job well done!"
          onFailure:
            - echo "uh oh, something went wrong"
          onComplete: #always
            - echo "Cleaning up some stuff"
          onCancel:
            - echo "Someone cancelled the job"
            
      - name: helmPublish
        type: HelmPublish
        configuration:
          chartPath: "my chart"
          flags: --debug
          inputResources:
            - name: gitRepoResource32
          outputResources:
            - name: helmChart
  - name: test_pipeline_bash
    steps:
      - name: bash_step
        type: Bash
        configuration:
          runtime:            
            type: image
        execution:
          onExecute:
            - echo "executing task command 1"
            - echo "executing task command 2"
            - echo "hello frog" > test.xml
            - save_tests $res_repo_pipe_resourcePath/test.xml

