resources:
  - name: gitRepoResource
    type: GitRepo
    configuration:
      gitProvider: aidan_github
      path: a-murphy/5testRename5
      buildOn:
         pullRequestClose: false
         releaseCreate: true
         tagCreate: true
  - name: file
    type: RemoteFile
    configuration:
      source: ftpIntegration2
      fileLocation: /home/test
      fileName: test.txt
  - name: awsFile
    type: RemoteFile
    configuration:
      source: AWS
      fileLocation: ${versionTag}
      fileName: test.txt
  - name: artifactoryFile
    type: RemoteFile
    configuration:
      source: artifactory
      fileLocation: ${versionTag}
      fileName: test.txt
  - name: gcloudFile
    type: RemoteFile
    configuration:
      source: gcloud
      fileLocation: ${versionTag}
      fileName: test.txt
      
  - name: cluster
    type: VmCluster
    configuration:
      sshKey: sshKey
      targets:
        - targetOne

  - name: gitRepoResource2
    type: GitRepo
    configuration:
      gitProvider: aidan_github
      path: a-murphy/5testRename5
      buildOn:
         commit: false
         pullRequestCreate: false
         pullRequestClose: false
         releaseCreate: false
         tagCreate: false
         
  - name: fileSpec
    type: FileSpec
    configuration:
      sourceArtifactory: artifactory
      pattern: "$test-${versionTag}-*"
      recursive: true
      flat: ${testBoolean}
      limit: ${testNumber}
   #   offset: ${testNumber}
  - name: dockerImage
    type: Image
    configuration:
      registry: docker
      imageName: "amurphy/test"
      imageTag: ${versionTag}
      autoPull: true
  - name: awsImage
    type: Image
    configuration:
      registry: AWS
      imageName: "test"
      imageTag: ${versionTag}
      region: ${versionTag}
      autoPull: true
  - name: artifactoryImage
    type: Image
    configuration:
      registry: artifactory
      sourceRepository: test
      imageName: "test"
      imageTag: ${versionTag}
      autoPull: ${testBoolean}
  - name: gcloudImage
    type: Image
    configuration:
      registry: gcloud
      imageName: "test"
      imageTag: ${versionTag}
      autoPull: true
  - name: outgoingWebhook2
    type: OutgoingWebhook
    configuration:
      webhookName: outgoingWebhook
      method: "POST"
      parameters: ${versionTag}
      path: /test
      headers:
        Content-Type: ${versionTag}
  - name: inputBuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: artifactory
      buildNumber: ${testNumber}
      buildName: ${versionTag}
  - name: outputBuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: artifactory
      buildNumber: ${testNumber}
      buildName: ${versionTag}
  - name: inputReleaseBundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: distribution
      name: bundleName
      version: ${versionTag}
      isSigned: ${testBoolean}
  - name: outputReleaseBundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: distribution
      name: bundleName
      version: ${versionTag}
      isSigned: ${testBoolean}
      
         
 # - name: gitRepoResource3
 #   type: GitRepo
 #   configuration:
 #     gitProvider: github
 #     path: a-murphy/5testRename5
 #     buildOn:
 #        commit: false
 #        pullRequestCreate: false
 #        pullRequestClose: false
 #        releaseCreate: false
 #        tagCreate: false
 #        
 # - name: myImage
 #   type: Image
 #   configuration:
 #     registry: docker
 #     imageName: amurphy/test
 #     imageTag: master
      
  - name: nodeRepoResource
    type: GitRepo
    configuration:
      gitProvider: aidan_github
      path: a-murphy/basic-node
      buildOn:
         commit: true
         pullRequestCreate: true
         pullRequestClose: false
         releaseCreate: true
         tagCreate: true
       
pipelines:
  - name: test_pipeline_10
    configuration:
   #   nodePool: Ubuntu16
      runtime:            
        type: host
    steps:
      - name: in_trigger_step
        type: Bash
        configuration:
          affinityGroup: groupone
          runtime:            
            type: host
          inputResources:
            - name: gitRepoResource2
            - name: file
            - name: awsFile
            - name: gcloudFile
            - name: artifactoryFile
        #    - name: otherSourceGitRepo
       #   outputResources:
       #     - name: gitRepoResource3
       #     - name: myImage
         # integrations:
         #   - name: aidan_github
         #   - name: test4
        execution:
          onExecute:
            - bump_semver v1.2.3 minor
            - echo "executing task command 1"
            - echo "executing task command 2"
            - openssl genrsa -out key.pem 1024 
            - openssl rsa -in key.pem -text -noout 
            - openssl rsa -in key.pem -pubout -out pub.pem 
            - openssl rsa -in pub.pem -pubin -text -noout 
            - echo "testing encryption" > testfile.txt
            - encrypt_file --output testencrypted.txt testfile.txt --key pub.pem
            - cat testencrypted.txt
            - decrypt_file testencrypted.txt --output testunencrypted.txt --key key.pem
            - cat testunencrypted.txt
            - encrypt_string "encryptme" --key pub.pem
            - encryptedstring=$(encrypt_string "encryptme" --key pub.pem)
            - echo "$encryptedstring"
            - decrypt_string "$encryptedstring" --key key.pem
         #   - write_output myImage "imageTag=$run_number" "sha=test"
            - sleep 10

      - name: main_step
        type: Bash
        configuration:
          environmentVariables:
            versionTag: testTag
            testNumber: 5
            testBoolean: "false"
          affinityGroup: groupone
     #     nodePool: Ubuntu16
          inputSteps:
            - name: in_trigger_step
          inputResources:
            - name: nodeRepoResource
            - name: fileSpec
            - name: dockerImage
            - name: awsImage
            - name: artifactoryImage
            - name: gcloudImage
            - name: cluster
          outputResources:
            - name: outgoingWebhook2
          integrations:
            - name: test
          runtime:
            type: image
            image:
              custom:
                name: drydock/u16node
                tag: master
        execution:
          onStart:
            - echo "Prepping build environment"
          onExecute:
            - echo "executing task command 1"
            - echo "executing task command 2"
            - compare_git --resource nodeRepoResource
            - cd "$res_nodeRepoResource_resourcePath"
          #  - switch_env nodejs 0.12
            - npm install
            - cd tests
            - ../node_modules/.bin/mocha --recursive "**/*.spec.js" -R mocha-junit-reporter --reporter-options mochaFile=../testresults.xml
            - ../node_modules/.bin/istanbul --include-all-sources cover -root "../routes" ../node_modules/mocha/bin/_mocha -- -R spec-xunit-file --recursive "**/*.spec.js"
            - ../node_modules/.bin/istanbul report cobertura --dir ../coverageReport
            - cd .. && ls
            - save_tests testresults.xml
            
          onSuccess:
            - echo "Job well done!"
          onFailure:
            - echo "uh oh, something went wrong"
          onComplete: #always
            - echo "Cleaning up some stuff"
          onCancel:
            - echo "Someone cancelled the job"
      - name: sign_step
        type: SignReleaseBundle
        configuration:
          environmentVariables:
            versionTag: testTag
            testNumber: 5
            testBoolean: "false"
          inputSteps:
            - name: main_step
          inputResources:
            - name: inputReleaseBundle
          outputResources:
            - name: outputReleaseBundle
      - name: xray_step
        type: XrayScan
        configuration:
          environmentVariables:
            versionTag: testTag
            testNumber: 5
            testBoolean: "false"
          inputSteps:
            - name: main_step
          inputResources:
            - name: inputBuildInfo
          outputResources:
            - name: outputBuildInfo

