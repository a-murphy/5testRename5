resources:
  - name: gitRepoResource30
    type: GitRepo
    configuration:
      gitProvider: aidan_github
      path: a-murphy/5testRename5
      buildOn:
        pullRequestClose: false
        releaseCreate: true
        tagCreate: true
      tags:
        include: include.*
  - name: gitRepoResource
    type: GitRepo
    configuration:
      gitProvider: aidan_github
      path: a-murphy/5testRename5
      buildOn:
         pullRequestClose: false
         releaseCreate: true
         tagCreate: true
      tags:
        include: include.*
    
  - name: cronTrigger
    type: CronTrigger
    configuration:
      interval: "0 0 * * *"
  - name: fileSpec
    type: FileSpec
    configuration:
      sourceArtifactory: artifactory
      pattern: "$test-${versionTag}-*"
      recursive: true
      buildName: myBuildName
      buildNumber: 100
      flat: ${testBoolean}
      limit: ${testNumber}
   #   offset: ${testNumber}
  - name: gitRepoResource2
    type: GitRepo
    configuration:
      gitProvider: aidan_github
      path: a-murphy/5testRename5
      branches:
        include: master$
      buildOn:
         commit: false
         pullRequestCreate: false
         pullRequestClose: false
         releaseCreate: false
         tagCreate: false
  - name: dockerImage
    type: Image
    configuration:
      registry: docker
      imageName: "amurphy/test"
      imageTag: ${versionTag}
      autoPull: false
  - name: dockerImage2
    type: Image
    configuration:
      registry: docker
      imageName: "amurphy/test"
      imageTag: ${versionTag}
  - name: nodeRepoResource
    type: GitRepo
    configuration:
      gitProvider: aidan_github
      path: a-murphy/basic-node
      buildOn:
         commit: true
         pullRequestCreate: true
         pullRequestClose: false
         releaseCreate: true
         tagCreate: true
  - name: nodeRepoResource2
    type: GitRepo
    configuration:
      gitProvider: aidan_github
      path: a-murphy/basic-node
      buildOn:
         commit: false
  - name: testRepo
    type: GitRepo
    configuration:
      gitProvider: aidan_github
      path: a-murphy/5testRename5
      buildOn:
         commit: true
         pullRequestCreate: false
         pullRequestClose: false
         releaseCreate: false
         tagCreate: false
      files:
        include: test.*
        exclude: test.exclude
  - name: outputBuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: artifactory
      buildName: test
      buildNumber: 1
  - name: aql
    type: Aql
    configuration:
      sourceArtifactory: artifactory
      query: "test: query"
      addedProperties:
        propertyOne: 1
        propertyTwo: two

  #- name: examples_repo
  #  type: GitRepo
  #  configuration:
  #    path: ~aidanm/project-examples
  #    gitProvider: aidan_bbs
  #    branches:
  #      include: master

pipelines:
  #- name: MavenStuff
  #  steps:
  #  - name: BuildSample
  #    type: MvnBuild
  #    configuration:
  #      sourceLocation: artifactory-maven-plugin-example
  #      configFileLocation: .
  #      configFileName: config
  #      mvnCommand: "install -P release"
     #   inputResources:
     #     - name: examples_repo
  #      integrations:
  #        - name: artifactory
  #    execution:
  #      onStart:
  #        - update-ca-certificates -f

  - name: test_pipeline_10
    configuration:
   #   nodePool: Ubuntu16
      runtime:            
        type: image
        image:
          auto:
            language: nodejs
            versions:
              - 10.6.3
    steps:
      - name: in_trigger_step
        type: Bash
        configuration:
          affinityGroup: groupone
       #   integrations:
       #     - name: docker
          runtime:            
            type: host
          inputResources:
            - name: gitRepoResource
              trigger: false
          outputResources:
            - name: gitRepoResource2
        execution:
          onExecute:
            - bump_semver v1.2.3 minor
            - echo "executing task command 1"
            - echo "executing task command 2"
            - openssl genrsa -out key.pem 1024 
            - openssl rsa -in key.pem -text -noout 
            - replicate_resource gitRepoResource gitRepoResource2
            - openssl rsa -in key.pem -pubout -out pub.pem 
            - openssl rsa -in pub.pem -pubin -text -noout 
            - echo "testing encryption" > testfile.txt
            - encrypt_file --output testencrypted.txt testfile.txt --key pub.pem
            - cat testencrypted.txt
            - decrypt_file testencrypted.txt --output testunencrypted.txt --key key.pem
            - cat testunencrypted.txt
            - encrypt_string "encryptme" --key pub.pem
            - encryptedstring=$(encrypt_string "encryptme" --key pub.pem)
            - echo "$encryptedstring"
            - decrypt_string "$encryptedstring" --key key.pem
         #   - write_output myImage "imageTag=$run_number" "sha=test"
            - add_run_files *.txt files
            - sleep 10
            - mkdir -p /test
            - cd /test && touch textFile.txt && echo "this is to test $step_id" > textFile.txt && cd ../
            - add_run_files /test testFolder1
            - add_run_files /test/textFile.txt file
            - add_run_variables test_variable="testing 1 2 3" test_variable2='testing 1 $2 3'
            

      - name: main_step
        type: Bash
        configuration:
          environmentVariables:
            versionTag: testTag
            testNumber: 5
            testBoolean: "false"
     #     affinityGroup: groupone
     #     nodePool: Windows
          inputSteps:
            - name: in_trigger_step
          inputResources:
            - name: nodeRepoResource
              trigger: false
            - name: testRepo
            - name: aql
          outputResources:
            - name: nodeRepoResource2
         # integrations:
         #   - name: jira
          runtime:
            type: image
            image:
              auto:
                language: NodeJS
                versions:
                  - "10"
       #       custom:
       #         name: drydock/u16node
       #         tag: master
        execution:
          onStart:
            - echo "Prepping build environment"
          onExecute:
            - 'echo "step_node_name: $step_node_name"'
            - 'echo "step_node_id: $step_node_id"'
            - 'echo "step_node_pool_name: $step_node_pool_name"'
            - replicate_resource nodeRepoResource nodeRepoResource2 --match-settings
            - echo $test_variable $test_variable2
            - test=$(find_step_configuration_value "testing123")
            - if [ -z "$test" ]; then echo "empty"; fi
            - if [ "$test" == "null" ]; then echo "null"; fi
            - if [ "$test" == "" ]; then echo "empty string"; fi
        #    - send_notification jira --project-id "TES" --type "Task" --summary "test bug" --description "test bug description" 
            - echo "executing task command 1"
            - echo "executing task command 2"
            - printenv
          #  - restore_pipeline_files testFolder /testRestore
          #  - ls -R /testRestore
          #  - mkdir /test
          #  - cd /test && touch textFile.txt && echo "this is to test $run_number" > textFile.txt && cd ../
          #  - add_pipeline_files /test testFolder
          #  - cp -r /var/opt/jfrog/pipelines /tmp/test
          #  - add_pipeline_files /tmp/test testBigFolder
          #  - add_run_files /test testFolder
          #  - restore_run_files testFolder1 /test1
          #  - ls -R /test1
          #  - add_cache_files /test testFolder
            - compare_git --resource nodeRepoResource
            - cd "$res_nodeRepoResource_resourcePath"
          #  - switch_env nodejs 0.12
            - npm install
            - cd tests
            - ../node_modules/.bin/mocha --recursive "**/*.spec.js" -R mocha-junit-reporter --reporter-options mochaFile=../testresults.xml
            - ../node_modules/.bin/istanbul --include-all-sources cover -root "../routes" ../node_modules/mocha/bin/_mocha -- -R spec-xunit-file --recursive "**/*.spec.js"
            - ../node_modules/.bin/istanbul report cobertura --dir ../coverageReport
            - cd .. && ls
         #   - fallocate -l 9M largefile
         #   - save_tests largefile
            - save_tests testresults.xml
            
          onSuccess:
            - echo "Job well done!"
          onFailure:
            - echo "uh oh, something went wrong"
          onComplete: #always
            - echo "Cleaning up some stuff"
          onCancel:
            - echo "Someone cancelled the job"
            
   #   - name: powershell_step
   #     type: Powershell
   #     configuration:
      #    nodePool: pool
   #       inputSteps:
   #         - name: in_trigger_step
   #       inputResources:
   #         - name: nodeRepoResource
   #           trigger: false
   #       runtime:
   #         type: image
   #         image:
   #           auto:
   #             language: node
   #             versions:
   #               - 10
   #    #       custom:
   #    #         name: drydock/u16node
   #    #         tag: master
   #     execution:
   #       onStart:
   #         - echo "Prepping build environment"
   #       onExecute:
   #         - 'echo "step_node_name: $step_node_name"'
   #         - 'echo "step_node_id: $step_node_id"'
   #         - 'echo "step_node_pool_name: $step_node_pool_name"'
   #       onSuccess:
   #         - echo "Job well done!"
   #       onFailure:
   #         - echo "uh oh, something went wrong"
   #       onComplete: #always
   #         - echo "Cleaning up some stuff"
   #       onCancel:
   #         - echo "Someone cancelled the job"
      - name: step_3
        type: Bash
        configuration:
          affinityGroup: grouptwo
          inputSteps:
            - name: main_step
        execution:
          onExecute:
            - sleep 10
      - name: step_4
        type: Bash
        configuration:
          affinityGroup: grouptwo
          inputSteps:
            - name: main_step
        execution:
          onExecute:
            - sleep 10
      - name: step_5
        type: Bash
        configuration:
          affinityGroup: grouptwo
          priority: 10
          inputSteps:
            - name: main_step
          outputResources:
            - name: dockerImage
        execution:
          onExecute:
            - sleep 10
            - write_output dockerImage "imageTag=$run_number" "sha=test"
      - name: step_6
        type: Bash
        configuration:
          affinityGroup: grouptwo
          priority: 5
          inputResources:
            - name: dockerImage
        execution:
          onExecute:
            - sleep 10
      - name: step_7
        type: Bash
        configuration:
          affinityGroup: groupthree
          inputSteps:
            - name: main_step
        execution:
          onExecute:
            - sleep 10
      - name: step_8
        type: Bash
        configuration:
          affinityGroup: groupthree
          runtime:            
            type: image
          inputSteps:
            - name: main_step
        execution:
          onExecute:
            - sleep 10
      - name: step_9
        type: Bash
        configuration:
          affinityGroup: groupfour
          priority: 10
          inputSteps:
            - name: main_step
        execution:
          onExecute:
            - sleep 10
      - name: step_10
        type: Bash
        configuration:
          priority: 5
          inputSteps:
            - name: step_5
        execution:
          onExecute:
            - sleep 10
            
      - name: docker_build
        type: DockerBuild
        configuration:
          dockerFileLocation: .
          dockerFileName: test${versionTag}
          dockerImageName: image${versionTag}
          dockerImageTag: tag${versionTag}
          dockerOptions: "test${versionTag} --test ${testNumber}"
          environmentVariables:
            versionTag: testTag
            testNumber: 5
            testBoolean: "false"
          inputSteps:
            - name: main_step
          inputResources:
            - name: fileSpec
            - name: nodeRepoResource
      - name: docker_push
        type: DockerPush
        configuration:
          targetRepository: repo${versionTag}
          forceXrayScan: ${testBoolean}
          autoPublishBuildInfo: true
          environmentVariables:
            versionTag: testTag
            testNumber: 5
            testBoolean: "false"
          inputSteps:
            - name: docker_build
          outputResources:
            - name: outputBuildInfo
          integrations:
            - name: artifactory


  - name: test_pipeline_11
    steps:
      - name: triggered_by_resource
        type: Bash
        configuration:
          inputResources:
            - name: dockerImage
          outputResources:
            - name: dockerImage2
        execution:
          onExecute:
            - sleep 10
      - name: following_step
        type: Bash
        configuration:
          inputResources:
            - name: dockerImage2
        execution:
          onExecute:
            - sleep 10
            
  - name: pipeline_test
    steps:
      - name: test
        type: Bash
        configuration:
          environmentVariables:
            chart: artifactory
            appVersion: ''
            segment: patch
          inputResources:
            - name: gitRepoResource
          runtime:
            type: image
            image:
              custom:
                name: drydock/u16phpall
                tag: master
                autoPull: false
        execution:
          onExecute:
            - php --version

  - name: go_test
    steps:
      - name: Go
        type: Bash #GoBuild
        configuration:
        #  sourceLocation: "."
        #  repository: repo
        #  outputLocation: "output"
        #  outputFile: "file"
          inputResources:
            - name: gitRepoResource
            - name: fileSpec
          outputResources:
            - name: outputBuildInfo
     #     integrations:
     #       - name: artifactory
          runtime:
            type: image
     #       image:
     #         auto:
     #           language: go
     #           versions:
     #             - 1.11.11
          execution:
            onExecute:
              - echo "test"
      - name: npmBuild
        type: NpmBuild
        configuration:
          sourceLocation: "true"
          repositoryName: test
          inputSteps:
            - name: Go
          inputResources:
            - name: gitRepoResource
            - name: fileSpec
          outputResources:
            - name: outputBuildInfo
     #     integrations:
     #       - name: artifactory



  - name: go_test3
    steps:
      - name: Go3
        type: GoBuild
        configuration:
          sourceLocation: "."
          repository: repo
          outputLocation: "output"
          outputFile: "file"
          inputResources:
            - name: gitRepoResource30
            - name: fileSpec
          outputResources:
            - name: outputBuildInfo
     #     integrations:
     #       - name: artifactory
          runtime:
            type: image
     #       image:
     #         auto:
     #           language: go
     #           versions:
     #             - 1.11.11
      - name: npmBuild3
        type: NpmBuild
        configuration:
          sourceLocation: "true"
          repositoryName: test
          inputSteps:
            - name: Go3
          inputResources:
            - name: gitRepoResource
            - name: fileSpec
          outputResources:
            - name: outputBuildInfo
     #     integrations:
     #       - name: artifactory


